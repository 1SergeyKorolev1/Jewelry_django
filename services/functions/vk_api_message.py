import pathlib
import time

import vk_api
from celery import shared_task
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.upload import VkUpload
from vk_api.utils import get_random_id

from config.settings import TOKEN_VK
from services.functions.number_order import get_number_order_list
from services.models import Making, Sale, Repair

project_path = pathlib.Path(__file__).parent.parent.parent

vk_session = vk_api.VkApi(token=TOKEN_VK)
session_api = vk_session.get_api()
longpool = VkLongPoll(vk_session)
upload = VkUpload(vk_session)


def send_some_message(user_id, some_text):
    session_api.messages.send(user_id=user_id, message=some_text, random_id=get_random_id())
    # vk_session.method('messages.send', {'user_id': id, 'message': some_text, 'random_id': get_random_id()})


def send_some_image(peer_id, image, user_id):
    if image == 0:
        pass
    else:
        with open(pathlib.Path(project_path, f'media/{image}'), 'rb') as img_:
            upload_img = upload.photo_messages(photos=[img_, ], peer_id=peer_id)[0]
            pic = 'photo{}_{}'.format(upload_img['owner_id'], upload_img['id'])
            session_api.messages.send(user_id=user_id, random_id=get_random_id(), attachment=pic, message='')


def get_help_message(info_):
    first_name = info_[0]['first_name']
    last_name = info_[0]['last_name']
    return (f'–ü—Ä–∏–≤–µ—Ç {first_name} {last_name} üôå\n'
            f'- –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ —Å —Å–∞–π—Ç–∞ http://127.0.0.1:8000/ :\n'
            f'  –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –∑–∞–∫–∞–∑–∞\n'
            f'- –£–∑–Ω–∞—Ç—å —Å–≤–æ–π id –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "–º–æ–π id"')


def get_order_message(number, info):
    first_name = info[0]['first_name']
    last_name = info[0]['last_name']
    making = Making.objects.filter(number=number)
    sale = Sale.objects.filter(number=number)
    repair = Repair.objects.filter(number=number)
    if making:
        return (f'–ü—Ä–∏–≤–µ—Ç {first_name} {last_name} üôå\n\n'
                f'–ó–ê–ö–ê–ó –ù–ê –ò–ó–ì–û–¢–û–í–õ–ï–ù–ò–ï\n'
                f'–ù–æ–º–µ—Ä: ‚Ññ{number}\n'
                f'–û–ø–∏—Å–∞–Ω–∏–µ: {making[0].description}\n'
                f'–ú–∞—Ç–µ—Ä–∏–∞–ª: {making[0].material}\n'
                f'–í–µ—Å: {making[0].weight}–≥.\n'
                f'–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: üí∞ {making[0].result}—Ä.\n'
                f'\n–ü–µ—Ä–µ–¥–∞–Ω –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä—É. ü§ù\n'
                f'–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ (–æ—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ)\n\n'
                f'üëÄ –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å - help - —á—Ç–æ–± –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')
    if sale:
        sample = "error"
        if sale[0].sample_gold != 'none':
            sample = sale[0].sample_gold
        if sale[0].sample_silver != 'none':
            sample = sale[0].sample_silver
        if sale[0].sample_platinum != 'none':
            sample = sale[0].sample_platinum
        return (f'–ü—Ä–∏–≤–µ—Ç {first_name} {last_name} üôå\n\n'
                f'–ó–ê–ö–ê–ó –ù–ê –ü–†–û–î–ê–ñ–£\n'
                f'–ù–æ–º–µ—Ä: ‚Ññ{number}\n'
                f'–ú–∞—Ç–µ—Ä–∏–∞–ª: {sale[0].material}\n'
                f'–í–µ—Å: {sale[0].weight}–≥.\n'
                f'–ü—Ä–æ–±–∞: {sample}\n'
                f'–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: üí∞ {sale[0].result}—Ä.\n'
                f'\n–ü–µ—Ä–µ–¥–∞–Ω –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä—É. ü§ù\n'
                f'–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ (–æ—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ)\n\n'
                f'üëÄ –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å - help - —á—Ç–æ–± –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')
    if repair:
        return (f'–ü—Ä–∏–≤–µ—Ç {first_name} {last_name} üôå\n\n'
                f'–ó–ê–ö–ê–ó –ù–ê –†–ï–ú–û–ù–¢\n'
                f'–ù–æ–º–µ—Ä: ‚Ññ{number}\n'
                f'–û–ø–∏—Å–∞–Ω–∏–µ: {repair[0].description}\n'
                f'–ú–∞—Ç–µ—Ä–∏–∞–ª: {repair[0].material}\n'
                f'\n–ü–µ—Ä–µ–¥–∞–Ω –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä—É. ü§ù\n'
                f'–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ (–æ—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ)\n\n'
                f'üëÄ –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å - help - —á—Ç–æ–± –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')
    return '–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞... –ú—ã —Ä–∞–∑–±–µ—Ä–µ–º—Å—è —Å –Ω–µ–π –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ—á—Ç–µ–º —ç—Ç–æ—Ç –¥–∏–∞–ª–æ–≥...'


def get_order_image(number):
    making = Making.objects.filter(number=number)
    sale = Sale.objects.filter(number=number)
    repair = Repair.objects.filter(number=number)
    if making:
        if making[0]:
            return making[0].image_one
    if sale:
        if sale[0]:
            return 0
    if repair:
        if repair[0]:
            return repair[0].image_one
    return 0

@shared_task
def start_vk_bot():
    while True:
        try:
            longpool.listen().close()
            for event in longpool.listen():
                if event.type == VkEventType.MESSAGE_NEW:
                    if event.to_me:
                        msg = event.text.lower()
                        id_ = event.user_id
                        info = session_api.users.get(user_id=id_)
                        peer_id = event.peer_id
                        if msg == 'help':
                            send_some_message(id_, get_help_message(info))
                        if msg == '–º–æ–π id':
                            send_some_message(id_, f'–í–∞—à vk id: {id_}')
                        if msg in get_number_order_list():
                            send_some_image(peer_id, get_order_image(msg), id_)
                            send_some_message(id_, get_order_message(msg, info))
        except Exception as e:
            print(f"–ü–†–û–ò–ó–û–®–õ–õ–ê –û–®–ò–ë–ö–ê: {e}")
            time.sleep(59)
